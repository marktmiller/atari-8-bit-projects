IP=22:SP=-1:FP=-1:TR=1
DSIZE=0:CODELEN=29:STACKLEN=50:OPCODES=19
IF DSIZE>0 THEN DIM GLOBALS(DSIZE) BYTE
DATA CODE() = 10,-3,9,2,4,8,10,9,1,18,
DATA        = 10,-3,10,-3,9,1,2,17,0,
DATA        = 1,3,18,9,2,17,0,1,14,16
DIM STACK(STACKLEN)
DATA OPANDCNT() B. = 0,0,0,0,0,0,1,
DATA            B. = 1,1,1,1,1,1,1,
DATA            B. = 0,0,0,2,0
DATA INST() B. = "NULL  ","IADD  ","ISUB  ","IMUL  ","ILT   ",
DATA        B. = "IEQ   ","BR    ","BRT   ","BRF   ",
DATA        B. = "ICONST","LOAD  ","GLOAD ","STORE ",
DATA        B. = "GSTORE","PRINT ","POP   ","HALT  ","CALL  ","RET   "
TIMER
EXEC EXCODE
T%=TIME
?"TIME: ";T%/60.0
END

PROC EXCODE
  WHILE IP<CODELEN AND CODE(IP)<>16
    OPCODE=CODE(IP)
    IF TR THEN EXEC DISASSEMBLE IP,OPCODE
    IP=IP+1
    IF OPCODE=14 'PRINT
      ?STACK(SP);
      SP=SP-1
    ENDIF
    IF OPCODE=9 'GSTORE
      SP=SP+1
      STACK(SP)=CODE(IP)
      IP=IP+1
    ENDIF
    IF OPCODE=13 'GSTORE
      GLOBALS(CODE(IP))=STACK(SP)
      SP=SP-1:IP=IP+1
    ENDIF
    IF OPCODE=11 'GLOAD
      SP=SP+1
      STACK(SP)=GLOBALS(CODE(IP))
      IP=IP+1
    ENDIF
    IF OPCODE=4 'ILT
      VAL1=STACK(SP):VAL2=STACK(SP-1)
      SP=SP-1
      IF VAL2<VAL1
        STACK(SP)=1
      ELSE
        STACK(SP)=0
      ENDIF
    ENDIF
    IF OPCODE=2 'ISUB
      STACK(SP-1)=STACK(SP-1)-STACK(SP)
      SP=SP-1
    ENDIF
    IF OPCODE=3 'IMUL
      STACK(SP-1)=STACK(SP-1)*STACK(SP)
      SP=SP-1
    ENDIF
    IF OPCODE=7 'BRT
      IF STACK(SP)=1
        IP=CODE(IP)
      ELSE
        IP=IP+1
      ENDIF
      SP=SP-1
    ENDIF
    IF OPCODE=8 'BRF
      IF STACK(SP)=0
        IP=CODE(IP)
      ELSE
        IP=IP+1
      ENDIF
      SP=SP-1
    ENDIF
    IF OPCODE=10 'LOAD
      SP=SP+1
      STACK(SP)=STACK(FP+CODE(IP))
      IP=IP+1
    ENDIF
    IF OPCODE=12 'STORE
      STACK(FP+CODE(IP))=STACK(SP)
      IP=IP+1:SP=SP-1
    ENDIF
    IF OPCODE=15 THEN SP=SP-1 'POP
    IF OPCODE=17 'CALL
      ADDR=CODE(IP)
      STACK(SP+1)=CODE(IP+1)
      STACK(SP+2)=FP
      STACK(SP+3)=IP+2
      SP=SP+3:FP=SP:IP=ADDR
    ENDIF
    IF OPCODE=18 'RET
      RVAL=STACK(SP)
      SP=FP:IP=STACK(SP):FP=STACK(SP-1)
      SP=SP-2-STACK(SP-2)
      STACK(SP)=RVAL
    ENDIF
    IF OPCODE=1 'IADD
      STACK(SP-1)=STACK(SP-1)+STACK(SP)
      SP=SP-1
    ENDIF
    IF OPCODE=5 'IEQ
      VAL1=STACK(SP):VAL2=STACK(SP-1)
      SP=SP-1
      IF VAL1=VAL2
        STACK(SP)=1
      ELSE
        STACK(SP)=0
      ENDIF
    ENDIF
    IF OPCODE<1 OR OPCODE>OPCODES
      ?"INVALID OPCODE: ";OPCODE;" AT IP=";
      ?IP-1
      END
    ELSE
      IF TR THEN EXEC DISPSTACK SP
    ENDIF
  WEND
  IF IP<CODELEN
    IF CODE(IP)=16 THEN OPCODE=16
    IF TR
      EXEC DISASSEMBLE IP,OPCODE
      EXEC DISPSTACK SP
      EXEC DUMPDATAMEM
    ENDIF
  ELSE
    ?"IP OVERFLOW"
    IF TR THEN EXEC DISPSTACK SP
  ENDIF
ENDPROC
PROC DISASSEMBLE PC OP
  OPANDS=OPANDCNT(OP)
  IF PC<CODELEN
    MNEMPTR=&INST
    ?PC;": ";$(MNEMPTR+OP*7);
    IF OPANDS>=1 THEN ?" ";CODE(PC+1);
    IF OPANDS=2 THEN ?",";CODE(PC+2);
  ENDIF
ENDPROC
PROC DISPSTACK STKPTR
  ?"  STACK=[";
  IF STKPTR>=0
    F.K=0 TO STKPTR:?" ";STACK(K);:N.K
  ENDIF
  ?"]"
ENDPROC
PROC DUMPDATAMEM
  IF DSIZE>0
    ?:?"DATA MEMORY:"
    F.I=0 TO DSIZE-1
      ?I;": ";GLOBALS(I)
    N.I
  ENDIF
ENDPROC

