10       .OPT NO EJECT
20       *=  $0600
30 CURSCOORD = 84    ;Offset 0=row,
40 ;                         1=col.
50 ZEROPG =  $CB     ;Used for disp. addr.
60       LDX #1      ;Offset into curs. coord.
70 NXTVAL
80       LDA CURSCOORD,X
90 ;  Separate 2 digits
0100 ;** Integer-divide byte by 10
0110 ;   (decimal)
0120 DIVISOR = 10
0130     STA DIVQUOT ;Store dividend
0140     CMP #0      ;If dividend>0,
0150     BNE CONT    ;continue
0160     STA REMAIN
0170     BEQ DISPLAY ;else disp. char.
0180 CONT
0190     TXA         ;Save X on stack
0200     PHA 
0210     LDX #8
0220     LDA #0
0230 LOOP ASL DIVQUOT
0240     ROL A
0250     CMP #DIVISOR ;If divisor>Accum.
0260     BCC BRANCH  ;  no subtraction
0270     SBC #DIVISOR ;else Accum.=Accum.
0280 ;                    - divisor,
0290     INC DIVQUOT ; put multiple in
0300 ;                 quotient.
0310 BRANCH DEX      ;Go through 8 bits
0320     BNE LOOP    ;of dividend
0330     STA REMAIN
0340     PLA         ;Restore X from stack
0350     TAX 
0360 ;** Sequence codes, disp. on scrn.
0370 DISPLAY
0380     BEQ DISPROW ;If X==0 (row)
0390 ;                   use offset 37,38
0400     LDY #34     ;else use 34,35,
0410 ;                   col. pos.
0420     BNE DISPCOORD
0430 DISPROW INY     ;Show in row pos.
0440     LDA #12     ;Place ','
0450     STA (ZEROPG),Y
0460     INY 
0470 DISPCOORD
0480     LDA DIVQUOT ;Get tens digit
0490     CLC         ;from quotient
0500     ADC #16     ;Cnv. to internal val.
0510     STA (ZEROPG),Y ;Trans. to scrn.
0520     INY         ;at offset.
0530     LDA REMAIN  ;Get ones digit from
0540     CLC         ;remainder.
0550     ADC #16     ;Cnv. to internal val.
0560     STA (ZEROPG),Y ;Trans. to scrn.
0570     DEX         ;at offset.
0580     BPL NXTVAL  ;Will fail when X is
0590 ;                neg.
0600     JMP 58466
0610     BRK 
0620 DIVQUOT .BYTE 0 ;LSB of dividend/
0630 ;                quotient.
0640 REMAIN .BYTE 0  ;Remainder
0650 ;** VBI initialization
0660 ;** Setup for USR call
0670     *=  $0670
0680 START
0690     PLA         ;Take off arg. cnt.
0700     PLA         ;High byte to storage
0710     STA ZEROPG+1
0720     PLA         ;Low byte to storage
0730     STA ZEROPG
0740     LDA #7
0750     LDX #6
0760     LDY #0
0770     JMP 58460
0780     RTS 
