10 GRAPHICS 0
20 REM DL1=97 GR.8 LINES, 12 GR.0 LINES, AT ADDRESS $A400 (41984)
30 REM GR.8 SCREEN MEM. AT $A600 (42496)
40 DL1ADR=$A400:GR8SCRNADR=$A600
50 CURRDLADR=DL1ADR:GR8LINES=96:GR0LINES=12
60 REM Set up Gr. 8 portion
70 ? "Setting up display list"
80 ? "Creating Graphics 8 portion"
90 RESTORE 710:FOR I=0 TO 5:READ A:POKE CURRDLADR+I,A:NEXT I
100 OFFSET=CURRDLADR+6
110 MEMPTR=GR8SCRNADR+40
120 FOR I=0 TO GR8LINES
130   REM Detect if 4K Antic mem. limit reached
140   X=MEMPTR-INT(MEMPTR/4096)*4096-40
150   IF X>=0
160     DLPTR=OFFSET+I
170     REM Detect if 1K Antic PC limit reached (not used. Included for completeness)
180     X=DLPTR-INT(DLPTR/1024)*1024-3
190     IF X=0
200       REM 1K limit reached. Insert code to reset Antic prog. counter
210       DLPHI=INT(DLPTR/256):DLPLO=DLPTR-DLPHI*256
220       POKE DLPTR,1:POKE DLPTR+1,DLPLO:POKE DLPTR+2,DLPHI
230     ELSE 
240       POKE OFFSET+I,15:REM Insert Gr. 8 line code
250     ENDIF 
260   ELSE 
270     REM 4K limit reached. Insert code to reset Antic mem. scanner
280     MEMHI=INT(MEMPTR/256):MEMLO=MEMPTR-MEMHI*256
290     POKE OFFSET+I,79:POKE OFFSET+I+1,MEMLO:POKE OFFSET+I+2,MEMHI:I=I+2
300   ENDIF 
310   MEMPTR=MEMPTR+40
320 NEXT I
330 REM Set up Gr. 0 portion
340 ? "Creating Graphics 0 portion"
350 REM Insert code for transition to Gr. 0
360 FOR I=GR8LINES+1 TO GR8LINES+1+3:READ A:POKE OFFSET+I,A:NEXT I
370 OFFSET=CURRDLADR+6+GR8LINES+1+4
380 REM Insert code for Gr. 0 lines
390 FOR I=0 TO GR0LINES-2:POKE OFFSET+I,2:NEXT I
400 OFFSET=CURRDLADR+6+GR8LINES+1+4+GR0LINES-1
410 REM Finish off DL with VBJump instruction to top of DL
420 FOR I=0 TO 2:READ A:POKE OFFSET+I,A:NEXT I
430 REM Load "presentation" library
440 REM containing rout's for
450 REM - clearing scrn.
460 REM - "chg. to drawing" in Gr. 8
470 REM - chg. back to Gr. 0 (editing code)
480 ? "Loading machine language routines"
490 RESTORE 820
500 FOR I=$6000 TO $6052:READ A:POKE I,A:NEXT I
510 FOR I=$6080 TO $60B7:READ A:POKE I,A:NEXT I
520 FOR I=$60E0 TO $610F:READ A:POKE I,A:NEXT I
530 FOR I=$6150 TO $6184:READ A:POKE I,A:NEXT I
540 REM CLEAR OUT GR.8 MEMORY
550 ? "Clearing out Graphics 8 memory"
560 X=USR($6080,GR8SCRNADR,0,320/8*97)
570 DLHI=INT(DL1ADR/256):DLLO=DL1ADR-DLHI*256
580 GR8HI=INT(GR8SCRNADR/256):GR8LO=GR8SCRNADR-GR8HI*256
590 REM Set Gr. 0 scrn. ptr. to top of scrn. mem.
600 GR0LO=PEEK(88):GR0HI=PEEK(89)
610 POKE 559,0:POKE 560,DLLO:POKE 561,DLHI:POKE 559,34
620 REM GO TO GR.0
630 POKE 87,0:POKE 88,GR0LO:POKE 89,GR0HI
640 CLS 
650 POSITION 2,12
660 REM Bracket cursor to lower half of Gr. 0 scrn.
670 X=USR($602F,0,12,11,23)
680 NEW :REM Clear mem. for prog's
690 END 
700 REM DL data
710 DATA 112,112,112,79,0,166
720 DATA 0,66,32,190
730 DATA 65,0,164
740 REM For debugging - Displays display list code
750 FOR I=$A400 TO $A400+6+GR8LINES-1+3+4+GR0LINES:? PEEK(I);",";:NEXT I
760 END 
770 REM Wipes out the page of DL mem.
780 FOR I=$A400 TO $A400+255:POKE I,0:NEXT I
790 END 
800 REM ML support routines
810 REM ROWCURS $6000-$6052 - Brackets cursor
820 DATA 165,87,208,36,165,84,205,43,96,240,7,205,44,96,240,14,208,22,173,45,96,133,84,169,142,141,252
830 DATA 2,208,10,173,46,96,133,84,169,143,141,252,2,76,98,228,0,0,0,0,104,104,104,141,43,96,104,104,24,105
840 DATA 1,141,45,96,104,104,141,44,96,104,104,56,233,1,141,46,96,169,7,162,96,160,0,76,92,228
850 REM FILL $6080-$60B7 - Used to clear Gr. 8 display
860 DATA 104,104,133,1,104,133,0,104,104,141,181,96,104,141,183,96,104,141,182,96,160,0,173,181,96,145
870 DATA 0,200,208,251,206,183,96,240,5,230,1,76,153,96,230,1,145,0,204,182,96,240,3,200,208,246,96,0,0,0
880 REM GRAFIC $60E0-$610F - GRAPHICS command in ML
890 DATA 72,162,96,169,12,157,66,3,32,86,228,162,96,169,3,157,66,3,169,13,157,68,3,169,97,157,69,3,104
900 DATA 157,75,3,41,240,73,16,9,12,157,74,3,32,86,228,96,83,58,155
910 REM SPTRANS $6150-$6184
920 REM Split-screen transition routines - Transition between Gr. 8 & Gr. 0
930 DATA 104,165,88,141,115,97,165,89,141,116,97,169,0,32,224,96,104,141,49,2,104,141,48,2,169,8,133,87,104
940 DATA 133,89,104,133,88,96,0,0,104,173,115,97,133,88,173,116,97,133,89,169,0,133,87,96
